import cv2
import numpy as np
import pickle
import os

# Paths
faces_file = 'data/faces_data.pkl'
names_file = 'data/names.pkl'
model_dir = 'trainer'
model_path = os.path.join(model_dir, 'trainer.yml')

# Create model directory if not exist
os.makedirs(model_dir, exist_ok=True)

# Load .pkl face data and names
with open(faces_file, 'rb') as f:
    faces_data = pickle.load(f)

with open(names_file, 'rb') as f:
    names_data = pickle.load(f)

# Assign a unique numeric ID for each name
unique_names = list(set(names_data))
name_to_id = {name: idx + 1 for idx, name in enumerate(unique_names)}

# Prepare training data
face_samples = []
ids = []

for i in range(len(faces_data)):
    face = cv2.cvtColor(faces_data[i], cv2.COLOR_BGR2GRAY)
    label = name_to_id[names_data[i]]
    face_samples.append(face)
    ids.append(label)

# Train LBPH recognizer
recognizer = cv2.face.LBPHFaceRecognizer_create()
recognizer.train(face_samples, np.array(ids))
recognizer.write(model_path)

print(f"[INFO] Trained {len(set(ids))} person(s) and saved model to {model_path}")
print(f"[INFO] Name to ID mapping: {name_to_id}")
